name: TAG CI/CD Pipeline

on:
  push:
    tags:
      - 'v*'

jobs:
  setup:
    runs-on: ubuntu-latest
    
    outputs:
        IMAGE_TAG: ${{ steps.extract_version.outputs.image_tag }}

    steps:
      - name: Extract version
        id: extract_version
        run: |
          RAW_VERSION="${GITHUB_REF#refs/tags/}"
          IMAGE_TAG="${RAW_VERSION#v}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "Image Tag is $IMAGE_TAG"


  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.ORG_DOCKER_USERNAME }}
          password: ${{ secrets.ORG_DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: docker.io/springboothate/teleport-plugin-slack-access-request-migration:${{ needs.setup.outputs.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: [setup, build]

    steps:
      - name: Checkout deployment repo
        uses: actions/checkout@v3
        with:
          repository: teletwoboy/charts
          path: charts
          token: ${{ secrets.ORG_GITHUB_KEY }}

      - name: Update helm chart
        run: |
          sed -i "s|imageTag: .*|imageTag: ${{ needs.setup.outputs.IMAGE_TAG }}|" charts/slack-access-request/values.yaml

      - name: Commit and push changes
        working-directory: charts
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add .
          git commit -m "Update migration image tag to ${{ needs.setup.outputs.IMAGE_TAG }}"
          git push

  notify:
    name: Notify Discord
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Send Discord Notification
        run: |
          if [ "${{ needs.build.result }}" == "success" ] && [ "${{ needs.deploy.result }}" == "success" ]; then
            STATUS="✅ 배포 성공"
          else
            STATUS="❌ 배포 실패"
          fi
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{
              \"content\": \"${STATUS} \n\
              \`1. Repository\`: \`${{ github.repository }}\`\n\
              \`2. Run Ref\`: \`${{ github.ref_name }}\`\n\
              \`3. Run Attempt\`: \`${{ github.run_attempt }}\`\n\
              \`4. Commit\`: <https://github.com/${{ github.repository }}/commit/${{ github.sha }}>\"
              }" \
              ${{ secrets.ORG_TAG_DISCORD_WEBHOOK_URL }}